% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/split_merge.R
\name{split_merge}
\alias{split_merge}
\title{Split-merge type update of clusterings}
\usage{
split_merge(
  Y,
  z,
  zs,
  S,
  mylist,
  N,
  t,
  b,
  log_v,
  n_split,
  Q,
  p,
  theta,
  psi,
  MORE_SPLIT = NULL,
  partition_partial = NULL
)
}
\arguments{
\item{Y}{multivariate binary data (row for subjects, column for dimensions)}

\item{z}{original cluster indicators}

\item{zs}{temporary variable used for split-merge assignments}

\item{S}{temporary set of indicies for restricted Gibbs}

\item{mylist}{the cluster ID list}

\item{N}{a vector of the numbers of subjects in the list of clusters}

\item{t}{total number of non-empty clusters}

\item{b}{gamma parameter in the mixture of finite mixture formulation}

\item{log_v}{coefficients in MFM (check Miller and Harrison 2016 JASA)}

\item{n_split}{the number of intermediate Gibbs scan to arrive at the launch split state (usually 5)}

\item{Q}{a Q matrix of dimension M by L}

\item{p}{a vector of machine (factor) prevalences of length M}

\item{theta}{a vector of true positive rates of length L}

\item{psi}{a vector of false positive rates of length L}

\item{MORE_SPLIT}{Default is \code{NULL}. When getting to launch state of the partition,
\code{TRUE} for biasing towards split; FALSE for uniformly choose a pair (i,j)
and then deciding to merge (if they belong to distinct clusters)
or split (if they belong to the identical cluster)}

\item{partition_partial}{a list of subject ids that each belong to a few known clusters.}
}
\value{
Returns the values at the end of the current iteration \itemize{
\item \code{t} the number of clusters;
\item \code{z} the cluster assignment indicators for all subjects (taking values from \code{mylist});
\item \code{N} the number of subjects for each cluster; please refer to mylist to get the matching cluster IDs;
\item \code{mylist} the non-empty and empty cluster IDs.
}
}
\description{
This function uses restricted_gibbs to arrive at a launch state and then propose
a split-merge move. Based on the computed acceptance probability, this function accepts
or rejects the proposal arriving at an old or new state for the cluster indicators.
}
